{"version":3,"sources":["components/Navigation/Navigation.jsx","components/HomePage/HomePage.jsx","components/PeoplePage/PeoplePage.jsx","helpers.js","App.jsx","index.js"],"names":["Navigation","className","exact","activeClassName","to","HomePage","PeoplePage","useState","people","setPeople","useEffect","fetch","then","result","json","catch","error","console","statusText","useRouteMatch","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","activeSlug","get","sortBy","handleSort","event","set","target","innerText","push","toString","sortedPeople","sort","a","b","localeCompare","handleLink","slug","preventDefault","appliedQuery","query","setQuery","applySearch","useCallback","debounce","newQuery","delete","visiblePeople","filter","person","name","toLowerCase","includes","type","placeholder","value","onChange","handleSearch","classNames","onClick","map","key","sex","born","died","some","curPerson","motherName","mother","find","fatherName","father","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.545d23b4.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <nav className=\"navbar\">\n    <NavLink\n      exact\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n      to=\"/\"\n    >\n      Home page\n    </NavLink>\n    <NavLink\n      className=\"navbar-item is-tab\"\n      activeClassName=\"is-active\"\n      to=\"/people\"\n    >\n      People page\n    </NavLink>\n  </nav>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  'Home'\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport classNames from 'classnames';\nimport { getPeople } from '../../helpers';\nimport { Link, useRouteMatch, useHistory, useLocation, useParams } from 'react-router-dom';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  },[])\n\n  const match = useRouteMatch('/people/:peopleSlug?');\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const activeSlug = searchParams.get('peopleSlug');\n  const sortBy = searchParams.get('sortBy');\n\n  const handleSort = event => {\n    searchParams.set('sortBy', event.target.innerText);\n    history.push(`?${searchParams.toString()}`);\n\n    const sortedPeople = [...people].sort((a, b) => {\n      if (typeof a[sortBy] === 'number') {\n        return a[sortBy] - b[sortBy];\n      } else {\n        return a[sortBy].localeCompare(b[sortBy]);\n      }\n    });\n    setPeople(sortedPeople);\n  }\n\n  const handleLink = (event, slug) => {\n    event.preventDefault();\n    searchParams.set('peopleSlug', slug)\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applySearch = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push(`?${searchParams.toString()}`);\n    }, 500),\n    []\n  );\n  const handleSearch = (event) => {\n    setQuery(event.target.value)\n    applySearch(event.target.value);\n  };\n\n  const visiblePeople = appliedQuery !== 0\n    ? people.filter( person => person.name.toLowerCase().includes(appliedQuery.toLowerCase()))\n    : people;\n\n  return (\n    <>\n      <input\n        className=\"input is-large\"\n        type=\"text\"\n        placeholder=\"Find by name...\"\n        value={query}\n        onChange={(event) => {handleSearch(event)}}\n      />\n      <table className=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>\n              <button\n                type=\"button\"\n                className={classNames('my-button', {'my-button--active': sortBy === 'name'})}\n                onClick={handleSort}\n              >\n                name\n              </button>\n            </th>\n            <th>\n              <button\n                type=\"button\"\n                className={classNames('my-button', {'my-button--active': sortBy === 'sex'})}\n                onClick={handleSort}\n              >\n                sex\n              </button>\n            </th>\n            <th>\n              <button\n                type=\"button\"\n                className={classNames('my-button', {'my-button--active': sortBy === 'born'})}\n                onClick={handleSort}\n              >\n                born\n              </button>\n            </th>\n            <th>\n              <button\n                type=\"button\"\n                className={classNames('my-button', {'my-button--active': sortBy === 'died'})}\n                onClick={handleSort}\n              >\n                died\n              </button>\n            </th>\n            <th>mother</th>\n            <th>father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map(person => (\n            <tr\n              key={person.slug}\n              className={activeSlug === person.slug && 'active-row'\n          }\n        >\n              <td>\n                <Link\n                  className={person.sex === 'f'\n                  ? 'female'\n                  : 'male'\n                  }\n                  onClick={(event) => {handleLink(event, person.slug)}}\n                >\n                  {person.name}\n                </Link>\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>{visiblePeople.some(curPerson => curPerson.name === person.motherName)\n                    ? <Link\n                        className='female'\n                        onClick={(event) => {\n                          const mother = visiblePeople.find(curPerson => curPerson.name === person.motherName);\n                          handleLink(event, mother.slug)\n                        }}\n                      >\n                      {person.motherName}\n                      </Link>\n                    : person.motherName\n                  }\n              </td>\n              <td>{visiblePeople.some(curPerson => curPerson.name === person.fatherName)\n                    ? <Link\n                        onClick={(event) => {\n                          const father = visiblePeople.find(curPerson => curPerson.name === person.fatherName);\n                          handleLink(event, father.slug)\n                        }}\n\n                        className='male'\n                      >\n                      {person.fatherName}\n                      </Link>\n                    : person.fatherName\n                  }\n              </td>\n          </tr>\n        ))}\n        </tbody>\n    </table>\n    </>\n  );\n};\n","const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => (\n  fetch(url)\n    .then((result) => {\n      return result.json();\n    })\n    .catch((error) => {\n      console.error(error.statusText);\n    })\n);\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation'\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss'\nimport 'bulma';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navigation />\n    <Switch>\n      <Route path=\"/people\" component={PeoplePage}/>\n      <Route path=\"/\" exact component={HomePage}/>\n      <Redirect path=\"/home\" to=\"/\"/>\n      <p>Page not found</p>\n\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}